tsio: type safe, printf compatible sprintf and fprintf functions, and an io manipulator
      that allows setting ostream flags according to a format.


- Features:

  'tsio::sprintf' and 'tsio::fprintf are' fully compatible with
  'std::sprintf' and 'std::fprintf, with the few exception:
   - wide characters are not implemented.
   - errors during formatting are printed on 'std::cerr'; no negative
     value is ever returned.

  tsio::oprintf and tsio::eprintf generate output on std::cout and
  std::cerr respectively.

  'tsio::sprintf' takes a reference to a 'std::string' as it's first
  arguments.  'tsio::fprintf' takes a reference to a 'std::ostream'

  'tsio::fstring' returns a formatted std::string;

  the 'tsio' functions have approximately the same speed as 'std::sprintf'.

  It is usualy safe to specify 'using namespace tsio;', since the compiler can
  disambiguate 'tsio::sprintf' and 'tsio::fprintf' from 'std::sprintf' and
  'std::fprintf' by the type of the first argument.  Other names in the
  'tsio' namespace don't clash with 'std' names.
  Of course, clashes with names in your application may preclude the use
  of the 'using namespace tsio;' statement.

  A test program is provided that exhaustively checks the results of
  'fmt::sprintf' amd 'std::sprintf' for equality.

  The 'tsio::fmt' io manipulator sets stream flags according to
  a format.  It uses the same formats as sprintf, but the effects are
  not always identical.  Some formats can not be reproduced exactly.
  For example, the ' ' modifier (space if positive) is not available; neither is
  integer format precision. ('% 10.3i' acts like '%10i').
  The '%' is optional in 'tsio::fmt'.

  'os << tsio::fmt()' can be used to reset all flags that are used in formatting
  to their default values.

  The tsio package implements many extensions to the standard printf format such as
  new and enhanced format specifiers, centering text, fill characters, formatting
  vectors, arrays and sets, repeating formats and more.
  For more information, refer to the documentation in the tsio.odt or tsio.pdf file.

- Example:

  For an example of many of these features, inspect (and run) the 'example.cpp' program
